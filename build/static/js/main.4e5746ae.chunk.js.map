{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Phonebook.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","id","onChange","onChangeName","value","name","onChangeNumber","number","type","Filter","Phonebook","style","listStyleType","onClick","Persons","toShow","map","person","baseUrl","phonbookService","getAll","axios","get","then","response","data","create","newObject","post","update","put","deletePerson","delete","Notification","message","errorStyle","successStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","failedStyle","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","existing","setExisting","setToShow","errorMessage","setErrorMessage","setErrorStyle","input","document","getElementById","useEffect","phonebookService","console","log","event","entry","target","filtered","filter","toLowerCase","includes","preventDefault","window","confirm","existingPerson","p","existingPersonId","e","updatedPerson","returnedPerson","indexOfPerson","findIndex","newArray","slice","splice","setTimeout","catch","location","reload","focus","newObjectPerson","push","some","selectedPerson","find","indexSelectedPerson","ReactDOM","render"],"mappings":"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","file":"static/js/main.4e5746ae.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          <div>\r\n            Name:{\" \"}\r\n            <input\r\n              id=\"name-input\"\r\n              onChange={props.onChangeName}\r\n              value={props.name}\r\n            />\r\n          </div>\r\n          <div>\r\n            Number:{\" \"}\r\n            <input\r\n              id=\"num-input\"\r\n              onChange={props.onChangeNumber}\r\n              value={props.number}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ type, onChange }) => {\r\n  return (\r\n    <>\r\n      <label>\r\n        Search\r\n        <input id=\"search-input\" type={type} onChange={onChange} />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Phonebook = (props) => {\r\n  return (\r\n    <>\r\n      <li style={{ listStyleType: \"none\" }}>\r\n        {props.name} - {props.number}\r\n        <button onClick={props.onClick}>delete</button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\r\nimport Phonebook from \"./Phonebook\";\r\n\r\nconst Persons = ({ toShow, onClick }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {toShow.map((person) => (\r\n          <Phonebook\r\n            key={person.id}\r\n            name={person.name}\r\n            number={person.number}\r\n            onClick={() => onClick(person.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst phonbookService = {getAll, create, update, deletePerson}\r\nexport default phonbookService","import React from \"react\";\r\n\r\nconst Notification = ( { message, errorStyle }) => {\r\n    if (message === null){\r\n        return null\r\n    }\r\n    return(\r\n        <div style={errorStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport phonebookService from './services/persons'\nimport Notification from './components/Notification'\n\n/* Hello Matti Luukkainen,\nI just want to thank you for your hardwork to check all my codes,\nI hope I did not mess it up and make it a hard job for you to figure my codes. \nAlso I want to say that I'm learning a lot through this course. This course is the only course I found very helpful because I get to solve the problems I'm facing by my self so I get to learn the hardway but most effective way in my opinion, although it takes me a while to figure out something sometimes. Overall I'm very happy I'm learning a lot.\nHave a great day Matti*/\n\nconst successStyle = {\n  color: 'green',\n  background: 'lightgrey',\n  fontSize: 20,\n  borderStyle: 'solid',\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10\n}\n\nconst failedStyle = {\n  color: 'red',\n  background: 'lightgrey',\n  fontSize: 20,\n  borderStyle: 'solid',\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10\n}\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [existing, setExisting] = useState(null)\n  const [toShow, setToShow] = useState(persons)\n\n  //for this exercise/step12 I use useState for changing style and notification\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [errorStyle, setErrorStyle] = useState(null)\n\n  const input = document.getElementById('name-input') \n  \n  useEffect(() => {\n        phonebookService\n            .getAll()\n            .then(response => {\n              setPersons(response)              \n              setToShow(response)\n              console.log(response)\n            })\n  },[])  \n\n  const handleSearch = (event) => {    \n    const entry = event.target.value    \n    if(entry === \"\"){      \n      setToShow(persons)                 \n    }else {\n      const filtered = persons.filter(person => person.name.toLowerCase().includes(entry.toLowerCase()))\n      setToShow(filtered)            \n    }\n  }\n\n  const handleOnChangeName = (event) => {\n    const entry = event.target.value        \n    const existing = persons.some(p => p.name.toLowerCase() === entry.toLowerCase())\n    existing ? setExisting(true) : setExisting(false)\n    setNewName(entry)\n    console.log(entry)\n    console.log('Name is existing?',existing)           \n  }\n\n  const handleOnChangeNumber = (event) => {\n    setNewNumber(event.target.value)    \n  }\n\n  const addPerson = (event) => {\n      event.preventDefault()\n\n      if (existing===true) {                    \n        if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){         \n          \n          const existingPerson = persons.filter(p => p.name.toLowerCase() === newName.toLowerCase())\n          const existingPersonId = existingPerson.map(e => e.id)        \n          const updatedPerson = {name: newName, number: newNumber}    \n          \n          console.log(\"existing person\" ,existingPerson)\n          console.log('existing id',existingPersonId)\n          \n          phonebookService\n              .update(existingPersonId, updatedPerson)\n              .then(returnedPerson => {             \n\n                const indexOfPerson = persons.findIndex(person => person.name === existingPerson[0].name)\n                \n                const newArray = persons.slice()\n                newArray.splice(indexOfPerson,1, returnedPerson)\n                \n                setPersons(newArray)\n                setToShow(newArray)\n                setNewName('')\n                setNewNumber('')\n                console.log('updated person', returnedPerson)                \n                console.log('index of existing person', indexOfPerson)\n                console.log('new array', newArray)\n                \n                setErrorMessage(\n                  `${newName}'s record is updated.`\n                )\n                setErrorStyle(successStyle)\n                setTimeout(() => {\n                  setErrorMessage(null)\n                },2000)\n                \n              })\n              .catch(() => {\n\n                setErrorStyle(failedStyle)\n                setErrorMessage(\n                  `Information of ${newName} has already been removed from server`\n                )\n                setTimeout(() => {\n                  setErrorMessage(null)                        \n                  window.location.reload()                  \n                },2000) \n\n                setNewName('')\n                setNewNumber('')               \n              })\n          \n        }\n          input.focus()\n      }\n      else{        \n          const newObjectPerson = {          \n          name: newName,\n          number: newNumber                           \n        }  \n        \n        phonebookService\n            .create(newObjectPerson)\n            .then(returnedPerson => {\n              const newArray = persons.slice()\n              newArray.push(returnedPerson)\n              setPersons(newArray)\n              setToShow(newArray)\n              setNewName('')\n              setNewNumber('')              \n              input.focus()\n              console.log(newArray)\n\n              setErrorStyle(successStyle)\n              setErrorMessage(\n                `${newName} is added to phonebook.`\n              )\n              setTimeout(() => {\n                setErrorMessage(null)\n              },2000)\n                            \n            })       \n      }                  \n  }\n  \n  const deletePerson = (id) => {\n    const selectedPerson = persons.find(person => person.id === id)\n    const indexSelectedPerson = persons.findIndex(person => person.name === selectedPerson.name)\n\n    console.log('selected:', selectedPerson, 'with index of', indexSelectedPerson)\n        \n    if (window.confirm(`Delete ${selectedPerson.name}?`)){\n    phonebookService\n        .deletePerson(id)\n        .then(() => {\n            persons.splice(indexSelectedPerson,1)\n            const newArray = persons.slice()\n            console.log(newArray)            \n            setPersons(newArray)\n            setToShow(newArray)\n        })\n      }\n        setErrorStyle(successStyle)\n        setErrorMessage(\n          `${selectedPerson.name} has been deleted.`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        },2000)\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} errorStyle={errorStyle} />\n      <Filter type={\"text\"} onChange={handleSearch} />\n      <h2>Add To Phonebook</h2>\n      <PersonForm \n          onSubmit={addPerson}\n          onChangeName={handleOnChangeName}\n          onChangeNumber={handleOnChangeNumber}\n          name={newName}   \n          number={newNumber}                  \n      />      \n      <h2>Numbers</h2>      \n      <Persons \n        toShow={toShow} \n        onClick={deletePerson}\n      />      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />,\n    \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}